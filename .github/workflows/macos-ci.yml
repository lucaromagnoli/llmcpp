name: macOS CI

on:
  workflow_dispatch:  # Manual trigger only
  push:
    branches: [ main, 'release/**' ]  # Run on main and release branches
    paths-ignore:  # Skip for docs directory only
      - 'docs/**'

jobs:
  build-and-test-macos:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Cache CMake build directory
    - name: Cache CMake build
      uses: actions/cache@v4
      with:
        path: |
          build
          !build/tests/llmcpp_tests
          !build/examples
        key: macos-cmake-${{ hashFiles('CMakeLists.txt', '**/CMakeLists.txt', 'src/**/*', 'include/**/*') }}
        restore-keys: |
          macos-cmake-

    # Cache Homebrew packages
    - name: Cache Homebrew (macOS)
      uses: actions/cache@v4
      with:
        path: |
          ~/Library/Caches/Homebrew
          /opt/homebrew/Cellar
        key: macos-homebrew-${{ hashFiles('.github/workflows/macos-ci.yml') }}
        restore-keys: macos-homebrew-

    - name: Setup Xcode command line tools
      run: |
        # Ensure Xcode command line tools are properly set up
        sudo xcode-select --install || true
        sudo xcode-select --reset
        # Set Xcode path explicitly
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

    - name: Install dependencies (macOS)
      run: |
        brew install cmake ninja nlohmann-json

    - name: Disable pre-commit hook
      run: |
        if [ -f .git/hooks/pre-commit ]; then
          mv .git/hooks/pre-commit .git/hooks/pre-commit.disabled
        fi

    - name: Configure CMake
      run: |
        # Set environment variables to help with linking
        export MACOSX_DEPLOYMENT_TARGET=11.0
        export SYSTEM_VERSION_COMPAT=0
        # Configure with explicit settings
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DLLMCPP_BUILD_TESTS=ON \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0

    - name: Build
      timeout-minutes: 20
      run: cmake --build build --config Release --parallel

    - name: Test
      working-directory: build
      timeout-minutes: 10
      run: |
        echo "Running CI-safe tests (excluding integration tests)..."
        ./tests/llmcpp_tests "~[integration]" --reporter compact

    - name: Upload build artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: macos-build-logs
        path: |
          build/CMakeFiles/*.log
          build/Testing/Temporary/LastTest.log
