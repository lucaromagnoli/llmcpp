name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]
        build_type: [Release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: brew install cmake ninja

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc g++ cmake ninja-build libssl-dev

    - name: Setup C++ Environment (Windows)
      if: matrix.os == 'windows-latest'
      uses: aminya/setup-cpp@v1
      with:
        cmake: true
        ninja: true

    # Comprehensive Windows caching strategy
    - name: Cache vcpkg binary cache (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.VCPKG_ROOT }}/archives
          ~/.cache/vcpkg/archives
        key: ${{ runner.os }}-vcpkg-binary-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-binary-

    - name: Cache vcpkg build trees (Windows)
      if: matrix.os == 'windows-latest'
      uses: actions/cache@v4
      with:
        path: |
          ${{ env.VCPKG_ROOT }}/buildtrees
          ${{ env.VCPKG_ROOT }}/packages
        key: ${{ runner.os }}-vcpkg-buildtrees-${{ hashFiles('**/vcpkg.json') }}-${{ hashFiles('**/.github/workflows/ci.yml') }}
        restore-keys: |
          ${{ runner.os }}-vcpkg-buildtrees-${{ hashFiles('**/vcpkg.json') }}-
          ${{ runner.os }}-vcpkg-buildtrees-

    - name: Setup vcpkg (Windows)
      if: matrix.os == 'windows-latest'
      uses: lukka/run-vcpkg@v11
      env:
        # Enable binary caching to drastically speed up builds
        VCPKG_BINARY_SOURCES: 'clear;x-gha,readwrite'
      with:
        vcpkgGitCommitId: 'f7423ee180c4b7f40d43402c2feb3859161ef625'
        runVcpkgInstall: true
        vcpkgJsonGlob: '**/vcpkg.json'

    # Cache CMake build directory for faster incremental builds
    - name: Cache CMake build directory
      uses: actions/cache@v4
      with:
        path: build
        key: ${{ runner.os }}-${{ matrix.build_type }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('**/vcpkg.json') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.build_type }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}-
          ${{ runner.os }}-${{ matrix.build_type }}-cmake-

    - name: Disable pre-commit hook
      run: |
        if [ -f .git/hooks/pre-commit ]; then
          mv .git/hooks/pre-commit .git/hooks/pre-commit.disabled
        fi
      shell: bash

    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DLLMCPP_BUILD_TESTS=ON -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_ROOT\scripts\buildsystems\vcpkg.cmake"

    - name: Configure CMake (Non-Windows)
      if: matrix.os != 'windows-latest'
      run: |
        cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DLLMCPP_BUILD_TESTS=ON

    - name: Build
      timeout-minutes: 20
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Test
      working-directory: build
      timeout-minutes: 10
      run: |
        echo "Running CI-safe tests (excluding integration tests)..."
        ./tests/llmcpp_tests "~[integration]" --reporter compact

    - name: Upload build artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-${{ matrix.os }}-${{ matrix.build_type }}
        path: |
          build/CMakeFiles/*.log
          build/Testing/Temporary/LastTest.log
